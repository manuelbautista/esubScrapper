//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dax.Scrapping.Appraisal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SchoolEntities : DbContext
    {
        public SchoolEntities()
            : base("name=SchoolEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AgentsInfo> AgentsInfoes { get; set; }
        public DbSet<AgentsMPT> AgentsMPTs { get; set; }
        public DbSet<AOL_LIST> AOL_LIST { get; set; }
        public DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public DbSet<aspnet_Paths> aspnet_Paths { get; set; }
        public DbSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers { get; set; }
        public DbSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser { get; set; }
        public DbSet<aspnet_Profile> aspnet_Profile { get; set; }
        public DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }
        public DbSet<aspnet_Users> aspnet_Users { get; set; }
        public DbSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events { get; set; }
        public DbSet<choice_map> choice_map { get; set; }
        public DbSet<Company_Name> Company_Name { get; set; }
        public DbSet<Degree_Of_Interest> Degree_Of_Interest { get; set; }
        public DbSet<ErrorReport> ErrorReports { get; set; }
        public DbSet<EsubMapping> EsubMappings { get; set; }
        public DbSet<EsubMappingValue> EsubMappingValues { get; set; }
        public DbSet<gvd_data> gvd_data { get; set; }
        public DbSet<gvd_post_info> gvd_post_info { get; set; }
        public DbSet<gvd_routing> gvd_routing { get; set; }
        public DbSet<ImportHistory> ImportHistories { get; set; }
        public DbSet<logFile> logFiles { get; set; }
        public DbSet<Master_Map> Master_Map { get; set; }
        public DbSet<myfootpathaffiliate> myfootpathaffiliates { get; set; }
        public DbSet<myfootpathaffiliates_back> myfootpathaffiliates_back { get; set; }
        public DbSet<post_info> post_info { get; set; }
        public DbSet<ProgramsCrossRef> ProgramsCrossRefs { get; set; }
        public DbSet<QuinStreet> QuinStreets { get; set; }
        public DbSet<Routing> Routings { get; set; }
        public DbSet<ScheduledTask> ScheduledTasks { get; set; }
        public DbSet<School_Detail> School_Detail { get; set; }
        public DbSet<school_map> school_map { get; set; }
        public DbSet<School_OverrideInputs> School_OverrideInputs { get; set; }
        public DbSet<School_Status> School_Status { get; set; }
        public DbSet<Schools_Submitteds> Schools_Submitteds { get; set; }
        public DbSet<submit_record> submit_record { get; set; }
        public DbSet<T_CLIENT> T_CLIENT { get; set; }
        public DbSet<Temp_myfootpathaffiliates> Temp_myfootpathaffiliates { get; set; }
        public DbSet<Temp_post_info> Temp_post_info { get; set; }
        public DbSet<user> users { get; set; }
        public DbSet<UsersHistory> UsersHistories { get; set; }
        public DbSet<vicidial_list> vicidial_list { get; set; }
        public DbSet<EdSoup> EdSoups { get; set; }
        public DbSet<EdSoupProfileLead> EdSoupProfileLeads { get; set; }
        public DbSet<EventLog> EventLogs { get; set; }
        public DbSet<FSO_DATA> FSO_DATA { get; set; }
        public DbSet<gvd_data_back_12_5_2015> gvd_data_back_12_5_2015 { get; set; }
        public DbSet<gvd_post_info_back_12_5_2015> gvd_post_info_back_12_5_2015 { get; set; }
        public DbSet<HEG> HEGs { get; set; }
        public DbSet<MediaSpike> MediaSpikes { get; set; }
        public DbSet<mfp_back> mfp_back { get; set; }
        public DbSet<mfp_record> mfp_record { get; set; }
        public DbSet<tblZip> tblZips { get; set; }
        public DbSet<Version_History> Version_History { get; set; }
        public DbSet<vicidial_list_back> vicidial_list_back { get; set; }
        public DbSet<View_Agents> View_Agents { get; set; }
        public DbSet<vw_aspnet_Applications> vw_aspnet_Applications { get; set; }
        public DbSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers { get; set; }
        public DbSet<vw_aspnet_Profiles> vw_aspnet_Profiles { get; set; }
        public DbSet<vw_aspnet_Roles> vw_aspnet_Roles { get; set; }
        public DbSet<vw_aspnet_Users> vw_aspnet_Users { get; set; }
        public DbSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles { get; set; }
        public DbSet<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_Paths { get; set; }
        public DbSet<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_Shared { get; set; }
        public DbSet<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_User { get; set; }
        public DbSet<AgentPerformanceInfo> AgentPerformanceInfoes { get; set; }
        public DbSet<AgentTimestamp> AgentTimestamps { get; set; }
    
        [EdmFunction("SchoolEntities", "fnLiveData")]
        public virtual IQueryable<fnLiveData_Result> fnLiveData(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnLiveData_Result>("[SchoolEntities].[fnLiveData](@StartDate, @EndDate)", startDateParameter, endDateParameter);
        }
    
        [EdmFunction("SchoolEntities", "udf_RPT_Split_Parameter")]
        public virtual IQueryable<udf_RPT_Split_Parameter_Result> udf_RPT_Split_Parameter(string paramater)
        {
            var paramaterParameter = paramater != null ?
                new ObjectParameter("Paramater", paramater) :
                new ObjectParameter("Paramater", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_RPT_Split_Parameter_Result>("[SchoolEntities].[udf_RPT_Split_Parameter](@Paramater)", paramaterParameter);
        }
    
        public virtual int Add_Call_Log(string call_date, string status, string phone_number, string recording_location, string lead_Id, string agent_Name, Nullable<int> bit)
        {
            var call_dateParameter = call_date != null ?
                new ObjectParameter("Call_date", call_date) :
                new ObjectParameter("Call_date", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var recording_locationParameter = recording_location != null ?
                new ObjectParameter("recording_location", recording_location) :
                new ObjectParameter("recording_location", typeof(string));
    
            var lead_IdParameter = lead_Id != null ?
                new ObjectParameter("Lead_Id", lead_Id) :
                new ObjectParameter("Lead_Id", typeof(string));
    
            var agent_NameParameter = agent_Name != null ?
                new ObjectParameter("Agent_Name", agent_Name) :
                new ObjectParameter("Agent_Name", typeof(string));
    
            var bitParameter = bit.HasValue ?
                new ObjectParameter("bit", bit) :
                new ObjectParameter("bit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Call_Log", call_dateParameter, statusParameter, phone_numberParameter, recording_locationParameter, lead_IdParameter, agent_NameParameter, bitParameter);
        }
    
        public virtual int Add_mfp_submission(string areaOfInterest, string citizenship, string educationLevel, string age, string degreeStartTimeframe, string zip, string iP, Nullable<System.DateTime> date_submitted, string submittedData, string result)
        {
            var areaOfInterestParameter = areaOfInterest != null ?
                new ObjectParameter("AreaOfInterest", areaOfInterest) :
                new ObjectParameter("AreaOfInterest", typeof(string));
    
            var citizenshipParameter = citizenship != null ?
                new ObjectParameter("Citizenship", citizenship) :
                new ObjectParameter("Citizenship", typeof(string));
    
            var educationLevelParameter = educationLevel != null ?
                new ObjectParameter("EducationLevel", educationLevel) :
                new ObjectParameter("EducationLevel", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var degreeStartTimeframeParameter = degreeStartTimeframe != null ?
                new ObjectParameter("DegreeStartTimeframe", degreeStartTimeframe) :
                new ObjectParameter("DegreeStartTimeframe", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var date_submittedParameter = date_submitted.HasValue ?
                new ObjectParameter("date_submitted", date_submitted) :
                new ObjectParameter("date_submitted", typeof(System.DateTime));
    
            var submittedDataParameter = submittedData != null ?
                new ObjectParameter("SubmittedData", submittedData) :
                new ObjectParameter("SubmittedData", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_mfp_submission", areaOfInterestParameter, citizenshipParameter, educationLevelParameter, ageParameter, degreeStartTimeframeParameter, zipParameter, iPParameter, date_submittedParameter, submittedDataParameter, resultParameter);
        }
    
        public virtual int Add_Partner_Reports(string partner_Call_Date, string partner_Name, string parner_Phone_Number, string repName, Nullable<int> bit)
        {
            var partner_Call_DateParameter = partner_Call_Date != null ?
                new ObjectParameter("Partner_Call_Date", partner_Call_Date) :
                new ObjectParameter("Partner_Call_Date", typeof(string));
    
            var partner_NameParameter = partner_Name != null ?
                new ObjectParameter("Partner_Name", partner_Name) :
                new ObjectParameter("Partner_Name", typeof(string));
    
            var parner_Phone_NumberParameter = parner_Phone_Number != null ?
                new ObjectParameter("Parner_Phone_Number", parner_Phone_Number) :
                new ObjectParameter("Parner_Phone_Number", typeof(string));
    
            var repNameParameter = repName != null ?
                new ObjectParameter("RepName", repName) :
                new ObjectParameter("RepName", typeof(string));
    
            var bitParameter = bit.HasValue ?
                new ObjectParameter("bit", bit) :
                new ObjectParameter("bit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Partner_Reports", partner_Call_DateParameter, partner_NameParameter, parner_Phone_NumberParameter, repNameParameter, bitParameter);
        }
    
        public virtual int Add_SelectedPartners(string date, string publisher, string phone, string representativeId, Nullable<int> bit, Nullable<int> sbit)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var publisherParameter = publisher != null ?
                new ObjectParameter("Publisher", publisher) :
                new ObjectParameter("Publisher", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var representativeIdParameter = representativeId != null ?
                new ObjectParameter("RepresentativeId", representativeId) :
                new ObjectParameter("RepresentativeId", typeof(string));
    
            var bitParameter = bit.HasValue ?
                new ObjectParameter("bit", bit) :
                new ObjectParameter("bit", typeof(int));
    
            var sbitParameter = sbit.HasValue ?
                new ObjectParameter("Sbit", sbit) :
                new ObjectParameter("Sbit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_SelectedPartners", dateParameter, publisherParameter, phoneParameter, representativeIdParameter, bitParameter, sbitParameter);
        }
    
        public virtual int Add_submission(Nullable<int> client_ID, string areaOfInterest, string programsOfInterestType, string citizenship, string educationLevel, string highSchoolGradYear, string degreeOfInterest, string age, string degreeStartTimeframe, string highSchoolEnrolled, string previouslyEnrolled, string firstName, string lastName, string address1, string address2, string city, string state, string zip, string email, Nullable<System.DateTime> date_submitted, string who_submitted, string schoolType, string submittedData, string result, Nullable<int> mfp_id, string group, string primaryPhone, string secondaryPhone, string gender, string affiliation, string military, string bestTimeToContact, string subID, string rN, string nursingDiploma, string teachingCredential, string advisor, string advisorEmail, string transferStatus, string transferFailReason, Nullable<bool> @override, Nullable<bool> heg_submit)
        {
            var client_IDParameter = client_ID.HasValue ?
                new ObjectParameter("client_ID", client_ID) :
                new ObjectParameter("client_ID", typeof(int));
    
            var areaOfInterestParameter = areaOfInterest != null ?
                new ObjectParameter("AreaOfInterest", areaOfInterest) :
                new ObjectParameter("AreaOfInterest", typeof(string));
    
            var programsOfInterestTypeParameter = programsOfInterestType != null ?
                new ObjectParameter("ProgramsOfInterestType", programsOfInterestType) :
                new ObjectParameter("ProgramsOfInterestType", typeof(string));
    
            var citizenshipParameter = citizenship != null ?
                new ObjectParameter("Citizenship", citizenship) :
                new ObjectParameter("Citizenship", typeof(string));
    
            var educationLevelParameter = educationLevel != null ?
                new ObjectParameter("EducationLevel", educationLevel) :
                new ObjectParameter("EducationLevel", typeof(string));
    
            var highSchoolGradYearParameter = highSchoolGradYear != null ?
                new ObjectParameter("HighSchoolGradYear", highSchoolGradYear) :
                new ObjectParameter("HighSchoolGradYear", typeof(string));
    
            var degreeOfInterestParameter = degreeOfInterest != null ?
                new ObjectParameter("DegreeOfInterest", degreeOfInterest) :
                new ObjectParameter("DegreeOfInterest", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var degreeStartTimeframeParameter = degreeStartTimeframe != null ?
                new ObjectParameter("DegreeStartTimeframe", degreeStartTimeframe) :
                new ObjectParameter("DegreeStartTimeframe", typeof(string));
    
            var highSchoolEnrolledParameter = highSchoolEnrolled != null ?
                new ObjectParameter("HighSchoolEnrolled", highSchoolEnrolled) :
                new ObjectParameter("HighSchoolEnrolled", typeof(string));
    
            var previouslyEnrolledParameter = previouslyEnrolled != null ?
                new ObjectParameter("PreviouslyEnrolled", previouslyEnrolled) :
                new ObjectParameter("PreviouslyEnrolled", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var date_submittedParameter = date_submitted.HasValue ?
                new ObjectParameter("date_submitted", date_submitted) :
                new ObjectParameter("date_submitted", typeof(System.DateTime));
    
            var who_submittedParameter = who_submitted != null ?
                new ObjectParameter("who_submitted", who_submitted) :
                new ObjectParameter("who_submitted", typeof(string));
    
            var schoolTypeParameter = schoolType != null ?
                new ObjectParameter("SchoolType", schoolType) :
                new ObjectParameter("SchoolType", typeof(string));
    
            var submittedDataParameter = submittedData != null ?
                new ObjectParameter("SubmittedData", submittedData) :
                new ObjectParameter("SubmittedData", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var mfp_idParameter = mfp_id.HasValue ?
                new ObjectParameter("mfp_id", mfp_id) :
                new ObjectParameter("mfp_id", typeof(int));
    
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var primaryPhoneParameter = primaryPhone != null ?
                new ObjectParameter("PrimaryPhone", primaryPhone) :
                new ObjectParameter("PrimaryPhone", typeof(string));
    
            var secondaryPhoneParameter = secondaryPhone != null ?
                new ObjectParameter("SecondaryPhone", secondaryPhone) :
                new ObjectParameter("SecondaryPhone", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var affiliationParameter = affiliation != null ?
                new ObjectParameter("Affiliation", affiliation) :
                new ObjectParameter("Affiliation", typeof(string));
    
            var militaryParameter = military != null ?
                new ObjectParameter("Military", military) :
                new ObjectParameter("Military", typeof(string));
    
            var bestTimeToContactParameter = bestTimeToContact != null ?
                new ObjectParameter("BestTimeToContact", bestTimeToContact) :
                new ObjectParameter("BestTimeToContact", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(string));
    
            var rNParameter = rN != null ?
                new ObjectParameter("RN", rN) :
                new ObjectParameter("RN", typeof(string));
    
            var nursingDiplomaParameter = nursingDiploma != null ?
                new ObjectParameter("NursingDiploma", nursingDiploma) :
                new ObjectParameter("NursingDiploma", typeof(string));
    
            var teachingCredentialParameter = teachingCredential != null ?
                new ObjectParameter("TeachingCredential", teachingCredential) :
                new ObjectParameter("TeachingCredential", typeof(string));
    
            var advisorParameter = advisor != null ?
                new ObjectParameter("Advisor", advisor) :
                new ObjectParameter("Advisor", typeof(string));
    
            var advisorEmailParameter = advisorEmail != null ?
                new ObjectParameter("AdvisorEmail", advisorEmail) :
                new ObjectParameter("AdvisorEmail", typeof(string));
    
            var transferStatusParameter = transferStatus != null ?
                new ObjectParameter("TransferStatus", transferStatus) :
                new ObjectParameter("TransferStatus", typeof(string));
    
            var transferFailReasonParameter = transferFailReason != null ?
                new ObjectParameter("TransferFailReason", transferFailReason) :
                new ObjectParameter("TransferFailReason", typeof(string));
    
            var overrideParameter = @override.HasValue ?
                new ObjectParameter("Override", @override) :
                new ObjectParameter("Override", typeof(bool));
    
            var heg_submitParameter = heg_submit.HasValue ?
                new ObjectParameter("heg_submit", heg_submit) :
                new ObjectParameter("heg_submit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_submission", client_IDParameter, areaOfInterestParameter, programsOfInterestTypeParameter, citizenshipParameter, educationLevelParameter, highSchoolGradYearParameter, degreeOfInterestParameter, ageParameter, degreeStartTimeframeParameter, highSchoolEnrolledParameter, previouslyEnrolledParameter, firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, zipParameter, emailParameter, date_submittedParameter, who_submittedParameter, schoolTypeParameter, submittedDataParameter, resultParameter, mfp_idParameter, groupParameter, primaryPhoneParameter, secondaryPhoneParameter, genderParameter, affiliationParameter, militaryParameter, bestTimeToContactParameter, subIDParameter, rNParameter, nursingDiplomaParameter, teachingCredentialParameter, advisorParameter, advisorEmailParameter, transferStatusParameter, transferFailReasonParameter, overrideParameter, heg_submitParameter);
        }
    
        public virtual int Add_submissionNew(Nullable<int> client_ID, string areaOfInterest, string programsOfInterestType, string citizenship, string educationLevel, string highSchoolGradYear, string degreeOfInterest, string age, string degreeStartTimeframe, string highSchoolEnrolled, string previouslyEnrolled, string firstName, string lastName, string address1, string address2, string city, string state, string zip, string email, Nullable<System.DateTime> date_submitted, string who_submitted, string schoolType, string submittedData, string result, Nullable<int> mfp_id, string group, string primaryPhone, string secondaryPhone, string gender, string affiliation, string military, string bestTimeToContact, string subID, string rN, string nursingDiploma, string teachingCredential, string advisor, string advisorEmail, string transferStatus, string transferFailReason, Nullable<bool> @override, Nullable<bool> heg_submit, ObjectParameter idSubmit)
        {
            var client_IDParameter = client_ID.HasValue ?
                new ObjectParameter("client_ID", client_ID) :
                new ObjectParameter("client_ID", typeof(int));
    
            var areaOfInterestParameter = areaOfInterest != null ?
                new ObjectParameter("AreaOfInterest", areaOfInterest) :
                new ObjectParameter("AreaOfInterest", typeof(string));
    
            var programsOfInterestTypeParameter = programsOfInterestType != null ?
                new ObjectParameter("ProgramsOfInterestType", programsOfInterestType) :
                new ObjectParameter("ProgramsOfInterestType", typeof(string));
    
            var citizenshipParameter = citizenship != null ?
                new ObjectParameter("Citizenship", citizenship) :
                new ObjectParameter("Citizenship", typeof(string));
    
            var educationLevelParameter = educationLevel != null ?
                new ObjectParameter("EducationLevel", educationLevel) :
                new ObjectParameter("EducationLevel", typeof(string));
    
            var highSchoolGradYearParameter = highSchoolGradYear != null ?
                new ObjectParameter("HighSchoolGradYear", highSchoolGradYear) :
                new ObjectParameter("HighSchoolGradYear", typeof(string));
    
            var degreeOfInterestParameter = degreeOfInterest != null ?
                new ObjectParameter("DegreeOfInterest", degreeOfInterest) :
                new ObjectParameter("DegreeOfInterest", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var degreeStartTimeframeParameter = degreeStartTimeframe != null ?
                new ObjectParameter("DegreeStartTimeframe", degreeStartTimeframe) :
                new ObjectParameter("DegreeStartTimeframe", typeof(string));
    
            var highSchoolEnrolledParameter = highSchoolEnrolled != null ?
                new ObjectParameter("HighSchoolEnrolled", highSchoolEnrolled) :
                new ObjectParameter("HighSchoolEnrolled", typeof(string));
    
            var previouslyEnrolledParameter = previouslyEnrolled != null ?
                new ObjectParameter("PreviouslyEnrolled", previouslyEnrolled) :
                new ObjectParameter("PreviouslyEnrolled", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var date_submittedParameter = date_submitted.HasValue ?
                new ObjectParameter("date_submitted", date_submitted) :
                new ObjectParameter("date_submitted", typeof(System.DateTime));
    
            var who_submittedParameter = who_submitted != null ?
                new ObjectParameter("who_submitted", who_submitted) :
                new ObjectParameter("who_submitted", typeof(string));
    
            var schoolTypeParameter = schoolType != null ?
                new ObjectParameter("SchoolType", schoolType) :
                new ObjectParameter("SchoolType", typeof(string));
    
            var submittedDataParameter = submittedData != null ?
                new ObjectParameter("SubmittedData", submittedData) :
                new ObjectParameter("SubmittedData", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var mfp_idParameter = mfp_id.HasValue ?
                new ObjectParameter("mfp_id", mfp_id) :
                new ObjectParameter("mfp_id", typeof(int));
    
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var primaryPhoneParameter = primaryPhone != null ?
                new ObjectParameter("PrimaryPhone", primaryPhone) :
                new ObjectParameter("PrimaryPhone", typeof(string));
    
            var secondaryPhoneParameter = secondaryPhone != null ?
                new ObjectParameter("SecondaryPhone", secondaryPhone) :
                new ObjectParameter("SecondaryPhone", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var affiliationParameter = affiliation != null ?
                new ObjectParameter("Affiliation", affiliation) :
                new ObjectParameter("Affiliation", typeof(string));
    
            var militaryParameter = military != null ?
                new ObjectParameter("Military", military) :
                new ObjectParameter("Military", typeof(string));
    
            var bestTimeToContactParameter = bestTimeToContact != null ?
                new ObjectParameter("BestTimeToContact", bestTimeToContact) :
                new ObjectParameter("BestTimeToContact", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(string));
    
            var rNParameter = rN != null ?
                new ObjectParameter("RN", rN) :
                new ObjectParameter("RN", typeof(string));
    
            var nursingDiplomaParameter = nursingDiploma != null ?
                new ObjectParameter("NursingDiploma", nursingDiploma) :
                new ObjectParameter("NursingDiploma", typeof(string));
    
            var teachingCredentialParameter = teachingCredential != null ?
                new ObjectParameter("TeachingCredential", teachingCredential) :
                new ObjectParameter("TeachingCredential", typeof(string));
    
            var advisorParameter = advisor != null ?
                new ObjectParameter("Advisor", advisor) :
                new ObjectParameter("Advisor", typeof(string));
    
            var advisorEmailParameter = advisorEmail != null ?
                new ObjectParameter("AdvisorEmail", advisorEmail) :
                new ObjectParameter("AdvisorEmail", typeof(string));
    
            var transferStatusParameter = transferStatus != null ?
                new ObjectParameter("TransferStatus", transferStatus) :
                new ObjectParameter("TransferStatus", typeof(string));
    
            var transferFailReasonParameter = transferFailReason != null ?
                new ObjectParameter("TransferFailReason", transferFailReason) :
                new ObjectParameter("TransferFailReason", typeof(string));
    
            var overrideParameter = @override.HasValue ?
                new ObjectParameter("Override", @override) :
                new ObjectParameter("Override", typeof(bool));
    
            var heg_submitParameter = heg_submit.HasValue ?
                new ObjectParameter("heg_submit", heg_submit) :
                new ObjectParameter("heg_submit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_submissionNew", client_IDParameter, areaOfInterestParameter, programsOfInterestTypeParameter, citizenshipParameter, educationLevelParameter, highSchoolGradYearParameter, degreeOfInterestParameter, ageParameter, degreeStartTimeframeParameter, highSchoolEnrolledParameter, previouslyEnrolledParameter, firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, zipParameter, emailParameter, date_submittedParameter, who_submittedParameter, schoolTypeParameter, submittedDataParameter, resultParameter, mfp_idParameter, groupParameter, primaryPhoneParameter, secondaryPhoneParameter, genderParameter, affiliationParameter, militaryParameter, bestTimeToContactParameter, subIDParameter, rNParameter, nursingDiplomaParameter, teachingCredentialParameter, advisorParameter, advisorEmailParameter, transferStatusParameter, transferFailReasonParameter, overrideParameter, heg_submitParameter, idSubmit);
        }
    
        public virtual int AddClient(string client_name, string client_address, string client_city, string client_state, string client_zip, string client_phone, string client_work_phone, string client_email, string client_added_by, string client_AOI, string client_POI, string client_citizenship, string client_education_level, string client_high_school_grad_year, string client_degree_of_interest, string client_age, string client_degree_start_timeframe, string client_high_school_enrolled, string client_previously_enrolled, string client_military, string client_gender, string client_affiliation, string client_best_time_to_contact, string client_ip, string client_mfp_id, string client_sub_id, string client_attended_class, string client_has_internet, string client_contacted_schools, string client_rn, string client_nursing, string client_teaching_cred, ObjectParameter clientID, string client_submitted)
        {
            var client_nameParameter = client_name != null ?
                new ObjectParameter("client_name", client_name) :
                new ObjectParameter("client_name", typeof(string));
    
            var client_addressParameter = client_address != null ?
                new ObjectParameter("client_address", client_address) :
                new ObjectParameter("client_address", typeof(string));
    
            var client_cityParameter = client_city != null ?
                new ObjectParameter("client_city", client_city) :
                new ObjectParameter("client_city", typeof(string));
    
            var client_stateParameter = client_state != null ?
                new ObjectParameter("client_state", client_state) :
                new ObjectParameter("client_state", typeof(string));
    
            var client_zipParameter = client_zip != null ?
                new ObjectParameter("client_zip", client_zip) :
                new ObjectParameter("client_zip", typeof(string));
    
            var client_phoneParameter = client_phone != null ?
                new ObjectParameter("client_phone", client_phone) :
                new ObjectParameter("client_phone", typeof(string));
    
            var client_work_phoneParameter = client_work_phone != null ?
                new ObjectParameter("client_work_phone", client_work_phone) :
                new ObjectParameter("client_work_phone", typeof(string));
    
            var client_emailParameter = client_email != null ?
                new ObjectParameter("client_email", client_email) :
                new ObjectParameter("client_email", typeof(string));
    
            var client_added_byParameter = client_added_by != null ?
                new ObjectParameter("client_added_by", client_added_by) :
                new ObjectParameter("client_added_by", typeof(string));
    
            var client_AOIParameter = client_AOI != null ?
                new ObjectParameter("client_AOI", client_AOI) :
                new ObjectParameter("client_AOI", typeof(string));
    
            var client_POIParameter = client_POI != null ?
                new ObjectParameter("client_POI", client_POI) :
                new ObjectParameter("client_POI", typeof(string));
    
            var client_citizenshipParameter = client_citizenship != null ?
                new ObjectParameter("client_citizenship", client_citizenship) :
                new ObjectParameter("client_citizenship", typeof(string));
    
            var client_education_levelParameter = client_education_level != null ?
                new ObjectParameter("client_education_level", client_education_level) :
                new ObjectParameter("client_education_level", typeof(string));
    
            var client_high_school_grad_yearParameter = client_high_school_grad_year != null ?
                new ObjectParameter("client_high_school_grad_year", client_high_school_grad_year) :
                new ObjectParameter("client_high_school_grad_year", typeof(string));
    
            var client_degree_of_interestParameter = client_degree_of_interest != null ?
                new ObjectParameter("client_degree_of_interest", client_degree_of_interest) :
                new ObjectParameter("client_degree_of_interest", typeof(string));
    
            var client_ageParameter = client_age != null ?
                new ObjectParameter("client_age", client_age) :
                new ObjectParameter("client_age", typeof(string));
    
            var client_degree_start_timeframeParameter = client_degree_start_timeframe != null ?
                new ObjectParameter("client_degree_start_timeframe", client_degree_start_timeframe) :
                new ObjectParameter("client_degree_start_timeframe", typeof(string));
    
            var client_high_school_enrolledParameter = client_high_school_enrolled != null ?
                new ObjectParameter("client_high_school_enrolled", client_high_school_enrolled) :
                new ObjectParameter("client_high_school_enrolled", typeof(string));
    
            var client_previously_enrolledParameter = client_previously_enrolled != null ?
                new ObjectParameter("client_previously_enrolled", client_previously_enrolled) :
                new ObjectParameter("client_previously_enrolled", typeof(string));
    
            var client_militaryParameter = client_military != null ?
                new ObjectParameter("client_military", client_military) :
                new ObjectParameter("client_military", typeof(string));
    
            var client_genderParameter = client_gender != null ?
                new ObjectParameter("client_gender", client_gender) :
                new ObjectParameter("client_gender", typeof(string));
    
            var client_affiliationParameter = client_affiliation != null ?
                new ObjectParameter("client_affiliation", client_affiliation) :
                new ObjectParameter("client_affiliation", typeof(string));
    
            var client_best_time_to_contactParameter = client_best_time_to_contact != null ?
                new ObjectParameter("client_best_time_to_contact", client_best_time_to_contact) :
                new ObjectParameter("client_best_time_to_contact", typeof(string));
    
            var client_ipParameter = client_ip != null ?
                new ObjectParameter("client_ip", client_ip) :
                new ObjectParameter("client_ip", typeof(string));
    
            var client_mfp_idParameter = client_mfp_id != null ?
                new ObjectParameter("client_mfp_id", client_mfp_id) :
                new ObjectParameter("client_mfp_id", typeof(string));
    
            var client_sub_idParameter = client_sub_id != null ?
                new ObjectParameter("client_sub_id", client_sub_id) :
                new ObjectParameter("client_sub_id", typeof(string));
    
            var client_attended_classParameter = client_attended_class != null ?
                new ObjectParameter("client_attended_class", client_attended_class) :
                new ObjectParameter("client_attended_class", typeof(string));
    
            var client_has_internetParameter = client_has_internet != null ?
                new ObjectParameter("client_has_internet", client_has_internet) :
                new ObjectParameter("client_has_internet", typeof(string));
    
            var client_contacted_schoolsParameter = client_contacted_schools != null ?
                new ObjectParameter("client_contacted_schools", client_contacted_schools) :
                new ObjectParameter("client_contacted_schools", typeof(string));
    
            var client_rnParameter = client_rn != null ?
                new ObjectParameter("client_rn", client_rn) :
                new ObjectParameter("client_rn", typeof(string));
    
            var client_nursingParameter = client_nursing != null ?
                new ObjectParameter("client_nursing", client_nursing) :
                new ObjectParameter("client_nursing", typeof(string));
    
            var client_teaching_credParameter = client_teaching_cred != null ?
                new ObjectParameter("client_teaching_cred", client_teaching_cred) :
                new ObjectParameter("client_teaching_cred", typeof(string));
    
            var client_submittedParameter = client_submitted != null ?
                new ObjectParameter("client_submitted", client_submitted) :
                new ObjectParameter("client_submitted", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddClient", client_nameParameter, client_addressParameter, client_cityParameter, client_stateParameter, client_zipParameter, client_phoneParameter, client_work_phoneParameter, client_emailParameter, client_added_byParameter, client_AOIParameter, client_POIParameter, client_citizenshipParameter, client_education_levelParameter, client_high_school_grad_yearParameter, client_degree_of_interestParameter, client_ageParameter, client_degree_start_timeframeParameter, client_high_school_enrolledParameter, client_previously_enrolledParameter, client_militaryParameter, client_genderParameter, client_affiliationParameter, client_best_time_to_contactParameter, client_ipParameter, client_mfp_idParameter, client_sub_idParameter, client_attended_classParameter, client_has_internetParameter, client_contacted_schoolsParameter, client_rnParameter, client_nursingParameter, client_teaching_credParameter, clientID, client_submittedParameter);
        }
    
        public virtual int AddFSO(string first_name, string last_name, string email, string primary_phone, string field_of_interest, string zip)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var field_of_interestParameter = field_of_interest != null ?
                new ObjectParameter("field_of_interest", field_of_interest) :
                new ObjectParameter("field_of_interest", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFSO", first_nameParameter, last_nameParameter, emailParameter, primary_phoneParameter, field_of_interestParameter, zipParameter);
        }
    
        public virtual int AddGVD(string first_name, string last_name, string email, string primary_phone, string citizen, string field_of_interest, string has_hs_or_ged, string sub_id, string submitted_data, string submitted_site, string result, string address, string city, string state, string zip, string optindate, string optintime, string ipaddress, Nullable<bool> show_result, string post_result, string vendor_id, Nullable<bool> isDupe, Nullable<bool> first_pass, string lead_id, string post_function, string query_string, string url, Nullable<bool> force_reject)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var citizenParameter = citizen != null ?
                new ObjectParameter("citizen", citizen) :
                new ObjectParameter("citizen", typeof(string));
    
            var field_of_interestParameter = field_of_interest != null ?
                new ObjectParameter("field_of_interest", field_of_interest) :
                new ObjectParameter("field_of_interest", typeof(string));
    
            var has_hs_or_gedParameter = has_hs_or_ged != null ?
                new ObjectParameter("has_hs_or_ged", has_hs_or_ged) :
                new ObjectParameter("has_hs_or_ged", typeof(string));
    
            var sub_idParameter = sub_id != null ?
                new ObjectParameter("sub_id", sub_id) :
                new ObjectParameter("sub_id", typeof(string));
    
            var submitted_dataParameter = submitted_data != null ?
                new ObjectParameter("submitted_data", submitted_data) :
                new ObjectParameter("submitted_data", typeof(string));
    
            var submitted_siteParameter = submitted_site != null ?
                new ObjectParameter("submitted_site", submitted_site) :
                new ObjectParameter("submitted_site", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("result", result) :
                new ObjectParameter("result", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(string));
    
            var optindateParameter = optindate != null ?
                new ObjectParameter("optindate", optindate) :
                new ObjectParameter("optindate", typeof(string));
    
            var optintimeParameter = optintime != null ?
                new ObjectParameter("optintime", optintime) :
                new ObjectParameter("optintime", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var show_resultParameter = show_result.HasValue ?
                new ObjectParameter("show_result", show_result) :
                new ObjectParameter("show_result", typeof(bool));
    
            var post_resultParameter = post_result != null ?
                new ObjectParameter("post_result", post_result) :
                new ObjectParameter("post_result", typeof(string));
    
            var vendor_idParameter = vendor_id != null ?
                new ObjectParameter("vendor_id", vendor_id) :
                new ObjectParameter("vendor_id", typeof(string));
    
            var isDupeParameter = isDupe.HasValue ?
                new ObjectParameter("isDupe", isDupe) :
                new ObjectParameter("isDupe", typeof(bool));
    
            var first_passParameter = first_pass.HasValue ?
                new ObjectParameter("first_pass", first_pass) :
                new ObjectParameter("first_pass", typeof(bool));
    
            var lead_idParameter = lead_id != null ?
                new ObjectParameter("lead_id", lead_id) :
                new ObjectParameter("lead_id", typeof(string));
    
            var post_functionParameter = post_function != null ?
                new ObjectParameter("post_function", post_function) :
                new ObjectParameter("post_function", typeof(string));
    
            var query_stringParameter = query_string != null ?
                new ObjectParameter("query_string", query_string) :
                new ObjectParameter("query_string", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var force_rejectParameter = force_reject.HasValue ?
                new ObjectParameter("force_reject", force_reject) :
                new ObjectParameter("force_reject", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGVD", first_nameParameter, last_nameParameter, emailParameter, primary_phoneParameter, citizenParameter, field_of_interestParameter, has_hs_or_gedParameter, sub_idParameter, submitted_dataParameter, submitted_siteParameter, resultParameter, addressParameter, cityParameter, stateParameter, zipParameter, optindateParameter, optintimeParameter, ipaddressParameter, show_resultParameter, post_resultParameter, vendor_idParameter, isDupeParameter, first_passParameter, lead_idParameter, post_functionParameter, query_stringParameter, urlParameter, force_rejectParameter);
        }
    
        public virtual int AddMFP(string first_name, string last_name, string email, string primary_phone, string citizen, string field_of_interest, string has_hs_or_ged, string sub_id, string submitted_data, string submitted_site, string result, string address, string city, string state, string zip, string optindate, string optintime, string ipaddress, Nullable<bool> show_result, string post_result, string vendor_id, Nullable<bool> isDupe, Nullable<bool> first_pass, string lead_id, string post_function, string query_string, string url, Nullable<bool> force_reject)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var citizenParameter = citizen != null ?
                new ObjectParameter("citizen", citizen) :
                new ObjectParameter("citizen", typeof(string));
    
            var field_of_interestParameter = field_of_interest != null ?
                new ObjectParameter("field_of_interest", field_of_interest) :
                new ObjectParameter("field_of_interest", typeof(string));
    
            var has_hs_or_gedParameter = has_hs_or_ged != null ?
                new ObjectParameter("has_hs_or_ged", has_hs_or_ged) :
                new ObjectParameter("has_hs_or_ged", typeof(string));
    
            var sub_idParameter = sub_id != null ?
                new ObjectParameter("sub_id", sub_id) :
                new ObjectParameter("sub_id", typeof(string));
    
            var submitted_dataParameter = submitted_data != null ?
                new ObjectParameter("submitted_data", submitted_data) :
                new ObjectParameter("submitted_data", typeof(string));
    
            var submitted_siteParameter = submitted_site != null ?
                new ObjectParameter("submitted_site", submitted_site) :
                new ObjectParameter("submitted_site", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("result", result) :
                new ObjectParameter("result", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(string));
    
            var optindateParameter = optindate != null ?
                new ObjectParameter("optindate", optindate) :
                new ObjectParameter("optindate", typeof(string));
    
            var optintimeParameter = optintime != null ?
                new ObjectParameter("optintime", optintime) :
                new ObjectParameter("optintime", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var show_resultParameter = show_result.HasValue ?
                new ObjectParameter("show_result", show_result) :
                new ObjectParameter("show_result", typeof(bool));
    
            var post_resultParameter = post_result != null ?
                new ObjectParameter("post_result", post_result) :
                new ObjectParameter("post_result", typeof(string));
    
            var vendor_idParameter = vendor_id != null ?
                new ObjectParameter("vendor_id", vendor_id) :
                new ObjectParameter("vendor_id", typeof(string));
    
            var isDupeParameter = isDupe.HasValue ?
                new ObjectParameter("isDupe", isDupe) :
                new ObjectParameter("isDupe", typeof(bool));
    
            var first_passParameter = first_pass.HasValue ?
                new ObjectParameter("first_pass", first_pass) :
                new ObjectParameter("first_pass", typeof(bool));
    
            var lead_idParameter = lead_id != null ?
                new ObjectParameter("lead_id", lead_id) :
                new ObjectParameter("lead_id", typeof(string));
    
            var post_functionParameter = post_function != null ?
                new ObjectParameter("post_function", post_function) :
                new ObjectParameter("post_function", typeof(string));
    
            var query_stringParameter = query_string != null ?
                new ObjectParameter("query_string", query_string) :
                new ObjectParameter("query_string", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var force_rejectParameter = force_reject.HasValue ?
                new ObjectParameter("force_reject", force_reject) :
                new ObjectParameter("force_reject", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMFP", first_nameParameter, last_nameParameter, emailParameter, primary_phoneParameter, citizenParameter, field_of_interestParameter, has_hs_or_gedParameter, sub_idParameter, submitted_dataParameter, submitted_siteParameter, resultParameter, addressParameter, cityParameter, stateParameter, zipParameter, optindateParameter, optintimeParameter, ipaddressParameter, show_resultParameter, post_resultParameter, vendor_idParameter, isDupeParameter, first_passParameter, lead_idParameter, post_functionParameter, query_stringParameter, urlParameter, force_rejectParameter);
        }
    
        public virtual ObjectResult<string> aspnet_AnyDataInTables(Nullable<int> tablesToCheck)
        {
            var tablesToCheckParameter = tablesToCheck.HasValue ?
                new ObjectParameter("TablesToCheck", tablesToCheck) :
                new ObjectParameter("TablesToCheck", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_AnyDataInTables", tablesToCheckParameter);
        }
    
        public virtual int aspnet_Applications_CreateApplication(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Applications_CreateApplication", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_CheckSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_CheckSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Membership_ChangePasswordQuestionAndAnswer(string applicationName, string userName, string newPasswordQuestion, string newPasswordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordQuestionParameter = newPasswordQuestion != null ?
                new ObjectParameter("NewPasswordQuestion", newPasswordQuestion) :
                new ObjectParameter("NewPasswordQuestion", typeof(string));
    
            var newPasswordAnswerParameter = newPasswordAnswer != null ?
                new ObjectParameter("NewPasswordAnswer", newPasswordAnswer) :
                new ObjectParameter("NewPasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ChangePasswordQuestionAndAnswer", applicationNameParameter, userNameParameter, newPasswordQuestionParameter, newPasswordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_CreateUser(string applicationName, string userName, string password, string passwordSalt, string email, string passwordQuestion, string passwordAnswer, Nullable<bool> isApproved, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> createDate, Nullable<int> uniqueEmail, Nullable<int> passwordFormat, ObjectParameter userId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordQuestionParameter = passwordQuestion != null ?
                new ObjectParameter("PasswordQuestion", passwordQuestion) :
                new ObjectParameter("PasswordQuestion", typeof(string));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_CreateUser", applicationNameParameter, userNameParameter, passwordParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, userId);
        }
    
        public virtual int aspnet_Membership_FindUsersByEmail(string applicationName, string emailToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailToMatchParameter = emailToMatch != null ?
                new ObjectParameter("EmailToMatch", emailToMatch) :
                new ObjectParameter("EmailToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByEmail", applicationNameParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_FindUsersByName(string applicationName, string userNameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByName", applicationNameParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetAllUsers(string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetAllUsers", applicationNameParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetNumberOfUsersOnline(string applicationName, Nullable<int> minutesSinceLastInActive, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var minutesSinceLastInActiveParameter = minutesSinceLastInActive.HasValue ?
                new ObjectParameter("MinutesSinceLastInActive", minutesSinceLastInActive) :
                new ObjectParameter("MinutesSinceLastInActive", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetNumberOfUsersOnline", applicationNameParameter, minutesSinceLastInActiveParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPassword_Result> aspnet_Membership_GetPassword(string applicationName, string userName, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPassword_Result>("aspnet_Membership_GetPassword", applicationNameParameter, userNameParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, passwordAnswerParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPasswordWithFormat_Result> aspnet_Membership_GetPasswordWithFormat(string applicationName, string userName, Nullable<bool> updateLastLoginActivityDate, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPasswordWithFormat_Result>("aspnet_Membership_GetPasswordWithFormat", applicationNameParameter, userNameParameter, updateLastLoginActivityDateParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Membership_GetUserByEmail(string applicationName, string email)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Membership_GetUserByEmail", applicationNameParameter, emailParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByName_Result> aspnet_Membership_GetUserByName(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByName_Result>("aspnet_Membership_GetUserByName", applicationNameParameter, userNameParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByUserId_Result> aspnet_Membership_GetUserByUserId(Nullable<System.Guid> userId, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByUserId_Result>("aspnet_Membership_GetUserByUserId", userIdParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual int aspnet_Membership_ResetPassword(string applicationName, string userName, string newPassword, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ResetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter, passwordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_SetPassword(string applicationName, string userName, string newPassword, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_SetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter);
        }
    
        public virtual int aspnet_Membership_UnlockUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UnlockUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUser(string applicationName, string userName, string email, string comment, Nullable<bool> isApproved, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate, Nullable<int> uniqueEmail, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUser", applicationNameParameter, userNameParameter, emailParameter, commentParameter, isApprovedParameter, lastLoginDateParameter, lastActivityDateParameter, uniqueEmailParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUserInfo(string applicationName, string userName, Nullable<bool> isPasswordCorrect, Nullable<bool> updateLastLoginActivityDate, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isPasswordCorrectParameter = isPasswordCorrect.HasValue ?
                new ObjectParameter("IsPasswordCorrect", isPasswordCorrect) :
                new ObjectParameter("IsPasswordCorrect", typeof(bool));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUserInfo", applicationNameParameter, userNameParameter, isPasswordCorrectParameter, updateLastLoginActivityDateParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, lastLoginDateParameter, lastActivityDateParameter);
        }
    
        public virtual int aspnet_Paths_CreatePath(Nullable<System.Guid> applicationId, string path, ObjectParameter pathId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Paths_CreatePath", applicationIdParameter, pathParameter, pathId);
        }
    
        public virtual int aspnet_Personalization_GetApplicationId(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Personalization_GetApplicationId", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_PersonalizationAdministration_DeleteAllState(Nullable<bool> allUsersScope, string applicationName, ObjectParameter count)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_DeleteAllState", allUsersScopeParameter, applicationNameParameter, count);
        }
    
        public virtual int aspnet_PersonalizationAdministration_FindState(Nullable<bool> allUsersScope, string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_FindState", allUsersScopeParameter, applicationNameParameter, pageIndexParameter, pageSizeParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_GetCountOfState(ObjectParameter count, Nullable<bool> allUsersScope, string applicationName, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_GetCountOfState", count, allUsersScopeParameter, applicationNameParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetSharedState(ObjectParameter count, string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetSharedState", count, applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetUserState(ObjectParameter count, string applicationName, Nullable<System.DateTime> inactiveSinceDate, string userName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetUserState", count, applicationNameParameter, inactiveSinceDateParameter, userNameParameter, pathParameter);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationAllUsers_GetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationAllUsers_GetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_ResetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_ResetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_SetPageSettings(string applicationName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_SetPageSettings", applicationNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationPerUser_GetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationPerUser_GetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_ResetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_ResetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_SetPageSettings(string applicationName, string userName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_SetPageSettings", applicationNameParameter, userNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteProfiles(string applicationName, string userNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteProfiles", applicationNameParameter, userNamesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_GetNumberOfInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_GetNumberOfInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_Profile_GetProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<int> pageIndex, Nullable<int> pageSize, string userNameToMatch, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_GetProfiles", applicationNameParameter, profileAuthOptionsParameter, pageIndexParameter, pageSizeParameter, userNameToMatchParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<aspnet_Profile_GetProperties_Result> aspnet_Profile_GetProperties(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Profile_GetProperties_Result>("aspnet_Profile_GetProperties", applicationNameParameter, userNameParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Profile_SetProperties(string applicationName, string propertyNames, string propertyValuesString, byte[] propertyValuesBinary, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var propertyNamesParameter = propertyNames != null ?
                new ObjectParameter("PropertyNames", propertyNames) :
                new ObjectParameter("PropertyNames", typeof(string));
    
            var propertyValuesStringParameter = propertyValuesString != null ?
                new ObjectParameter("PropertyValuesString", propertyValuesString) :
                new ObjectParameter("PropertyValuesString", typeof(string));
    
            var propertyValuesBinaryParameter = propertyValuesBinary != null ?
                new ObjectParameter("PropertyValuesBinary", propertyValuesBinary) :
                new ObjectParameter("PropertyValuesBinary", typeof(byte[]));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_SetProperties", applicationNameParameter, propertyNamesParameter, propertyValuesStringParameter, propertyValuesBinaryParameter, userNameParameter, isUserAnonymousParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_RegisterSchemaVersion(string feature, string compatibleSchemaVersion, Nullable<bool> isCurrentVersion, Nullable<bool> removeIncompatibleSchema)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            var isCurrentVersionParameter = isCurrentVersion.HasValue ?
                new ObjectParameter("IsCurrentVersion", isCurrentVersion) :
                new ObjectParameter("IsCurrentVersion", typeof(bool));
    
            var removeIncompatibleSchemaParameter = removeIncompatibleSchema.HasValue ?
                new ObjectParameter("RemoveIncompatibleSchema", removeIncompatibleSchema) :
                new ObjectParameter("RemoveIncompatibleSchema", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_RegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter, isCurrentVersionParameter, removeIncompatibleSchemaParameter);
        }
    
        public virtual int aspnet_Roles_CreateRole(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_CreateRole", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Roles_DeleteRole(string applicationName, string roleName, Nullable<bool> deleteOnlyIfRoleIsEmpty)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var deleteOnlyIfRoleIsEmptyParameter = deleteOnlyIfRoleIsEmpty.HasValue ?
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", deleteOnlyIfRoleIsEmpty) :
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_DeleteRole", applicationNameParameter, roleNameParameter, deleteOnlyIfRoleIsEmptyParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Roles_GetAllRoles(string applicationName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Roles_GetAllRoles", applicationNameParameter);
        }
    
        public virtual int aspnet_Roles_RoleExists(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_RoleExists", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Setup_RemoveAllRoleMembers(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RemoveAllRoleMembers", nameParameter);
        }
    
        public virtual int aspnet_Setup_RestorePermissions(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RestorePermissions", nameParameter);
        }
    
        public virtual int aspnet_UnRegisterSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UnRegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Users_CreateUser(Nullable<System.Guid> applicationId, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> lastActivityDate, ObjectParameter userId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_CreateUser", applicationIdParameter, userNameParameter, isUserAnonymousParameter, lastActivityDateParameter, userId);
        }
    
        public virtual int aspnet_Users_DeleteUser(string applicationName, string userName, Nullable<int> tablesToDeleteFrom, ObjectParameter numTablesDeletedFrom)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tablesToDeleteFromParameter = tablesToDeleteFrom.HasValue ?
                new ObjectParameter("TablesToDeleteFrom", tablesToDeleteFrom) :
                new ObjectParameter("TablesToDeleteFrom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_DeleteUser", applicationNameParameter, userNameParameter, tablesToDeleteFromParameter, numTablesDeletedFrom);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_AddUsersToRoles(string applicationName, string userNames, string roleNames, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_FindUsersInRole(string applicationName, string roleName, string userNameToMatch)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_FindUsersInRole", applicationNameParameter, roleNameParameter, userNameToMatchParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetRolesForUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetRolesForUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetUsersInRoles(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetUsersInRoles", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_UsersInRoles_IsUserInRole(string applicationName, string userName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UsersInRoles_IsUserInRole", applicationNameParameter, userNameParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(string applicationName, string userNames, string roleNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
        }
    
        public virtual int aspnet_WebEvent_LogEvent(string eventId, Nullable<System.DateTime> eventTimeUtc, Nullable<System.DateTime> eventTime, string eventType, Nullable<decimal> eventSequence, Nullable<decimal> eventOccurrence, Nullable<int> eventCode, Nullable<int> eventDetailCode, string message, string applicationPath, string applicationVirtualPath, string machineName, string requestUrl, string exceptionType, string details)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            var eventTimeUtcParameter = eventTimeUtc.HasValue ?
                new ObjectParameter("EventTimeUtc", eventTimeUtc) :
                new ObjectParameter("EventTimeUtc", typeof(System.DateTime));
    
            var eventTimeParameter = eventTime.HasValue ?
                new ObjectParameter("EventTime", eventTime) :
                new ObjectParameter("EventTime", typeof(System.DateTime));
    
            var eventTypeParameter = eventType != null ?
                new ObjectParameter("EventType", eventType) :
                new ObjectParameter("EventType", typeof(string));
    
            var eventSequenceParameter = eventSequence.HasValue ?
                new ObjectParameter("EventSequence", eventSequence) :
                new ObjectParameter("EventSequence", typeof(decimal));
    
            var eventOccurrenceParameter = eventOccurrence.HasValue ?
                new ObjectParameter("EventOccurrence", eventOccurrence) :
                new ObjectParameter("EventOccurrence", typeof(decimal));
    
            var eventCodeParameter = eventCode.HasValue ?
                new ObjectParameter("EventCode", eventCode) :
                new ObjectParameter("EventCode", typeof(int));
    
            var eventDetailCodeParameter = eventDetailCode.HasValue ?
                new ObjectParameter("EventDetailCode", eventDetailCode) :
                new ObjectParameter("EventDetailCode", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var applicationPathParameter = applicationPath != null ?
                new ObjectParameter("ApplicationPath", applicationPath) :
                new ObjectParameter("ApplicationPath", typeof(string));
    
            var applicationVirtualPathParameter = applicationVirtualPath != null ?
                new ObjectParameter("ApplicationVirtualPath", applicationVirtualPath) :
                new ObjectParameter("ApplicationVirtualPath", typeof(string));
    
            var machineNameParameter = machineName != null ?
                new ObjectParameter("MachineName", machineName) :
                new ObjectParameter("MachineName", typeof(string));
    
            var requestUrlParameter = requestUrl != null ?
                new ObjectParameter("RequestUrl", requestUrl) :
                new ObjectParameter("RequestUrl", typeof(string));
    
            var exceptionTypeParameter = exceptionType != null ?
                new ObjectParameter("ExceptionType", exceptionType) :
                new ObjectParameter("ExceptionType", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_WebEvent_LogEvent", eventIdParameter, eventTimeUtcParameter, eventTimeParameter, eventTypeParameter, eventSequenceParameter, eventOccurrenceParameter, eventCodeParameter, eventDetailCodeParameter, messageParameter, applicationPathParameter, applicationVirtualPathParameter, machineNameParameter, requestUrlParameter, exceptionTypeParameter, detailsParameter);
        }
    
        public virtual int bitUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bitUpdate");
        }
    
        public virtual ObjectResult<DailySubmittedDetail_Result> DailySubmittedDetail(string status, string schoolName, string siteName, string agent, Nullable<System.DateTime> startDay, Nullable<System.DateTime> endDay)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("Agent", agent) :
                new ObjectParameter("Agent", typeof(string));
    
            var startDayParameter = startDay.HasValue ?
                new ObjectParameter("startDay", startDay) :
                new ObjectParameter("startDay", typeof(System.DateTime));
    
            var endDayParameter = endDay.HasValue ?
                new ObjectParameter("EndDay", endDay) :
                new ObjectParameter("EndDay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DailySubmittedDetail_Result>("DailySubmittedDetail", statusParameter, schoolNameParameter, siteNameParameter, agentParameter, startDayParameter, endDayParameter);
        }
    
        public virtual ObjectResult<DetailByDayWithCounts_Result> DetailByDayWithCounts(string agent, Nullable<System.DateTime> startDay, Nullable<System.DateTime> endDay, string agentGroup)
        {
            var agentParameter = agent != null ?
                new ObjectParameter("Agent", agent) :
                new ObjectParameter("Agent", typeof(string));
    
            var startDayParameter = startDay.HasValue ?
                new ObjectParameter("startDay", startDay) :
                new ObjectParameter("startDay", typeof(System.DateTime));
    
            var endDayParameter = endDay.HasValue ?
                new ObjectParameter("EndDay", endDay) :
                new ObjectParameter("EndDay", typeof(System.DateTime));
    
            var agentGroupParameter = agentGroup != null ?
                new ObjectParameter("AgentGroup", agentGroup) :
                new ObjectParameter("AgentGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetailByDayWithCounts_Result>("DetailByDayWithCounts", agentParameter, startDayParameter, endDayParameter, agentGroupParameter);
        }
    
        public virtual ObjectResult<Download_RecordingURL_Result> Download_RecordingURL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Download_RecordingURL_Result>("Download_RecordingURL");
        }
    
        public virtual ObjectResult<FindMyData_String_Result> FindMyData_String(string dataToFind, Nullable<bool> exactMatch)
        {
            var dataToFindParameter = dataToFind != null ?
                new ObjectParameter("DataToFind", dataToFind) :
                new ObjectParameter("DataToFind", typeof(string));
    
            var exactMatchParameter = exactMatch.HasValue ?
                new ObjectParameter("ExactMatch", exactMatch) :
                new ObjectParameter("ExactMatch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindMyData_String_Result>("FindMyData_String", dataToFindParameter, exactMatchParameter);
        }
    
        public virtual ObjectResult<Get_CAphone_number_Result> Get_CAphone_number()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_CAphone_number_Result>("Get_CAphone_number");
        }
    
        public virtual ObjectResult<Get_phone_number_Result> Get_phone_number()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_phone_number_Result>("Get_phone_number");
        }
    
        public virtual ObjectResult<string> GetClientList(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetClientList", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCompanyNameId(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCompanyNameId", nameParameter);
        }
    
        public virtual int getEstomesDir_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getEstomesDir_sp");
        }
    
        public virtual int GetMyRides2(Nullable<int> season, string myZip, Nullable<double> distance)
        {
            var seasonParameter = season.HasValue ?
                new ObjectParameter("season", season) :
                new ObjectParameter("season", typeof(int));
    
            var myZipParameter = myZip != null ?
                new ObjectParameter("myZip", myZip) :
                new ObjectParameter("myZip", typeof(string));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("distance", distance) :
                new ObjectParameter("distance", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMyRides2", seasonParameter, myZipParameter, distanceParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetSchoolStatusId(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSchoolStatusId", statusParameter);
        }
    
        public virtual int HTTP_POST(string sUrl, ObjectParameter response)
        {
            var sUrlParameter = sUrl != null ?
                new ObjectParameter("sUrl", sUrl) :
                new ObjectParameter("sUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HTTP_POST", sUrlParameter, response);
        }
    
        public virtual int ImportEdSoup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportEdSoup");
        }
    
        public virtual int ImportEdSoupProfileLeads()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportEdSoupProfileLeads");
        }
    
        public virtual int ImportHEG()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportHEG");
        }
    
        public virtual int ImportMediaSpike()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportMediaSpike");
        }
    
        public virtual int ImportQuinStreet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportQuinStreet");
        }
    
        public virtual int InsertEventLog(string userName, string message)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEventLog", userNameParameter, messageParameter);
        }
    
        public virtual int InsertorUpdateT_Client(string client_name, string client_address, string client_city, string client_state, string client_zip, string client_phone, string client_work_phone, string client_email, string client_added_by, string client_AOI, string client_POI, string client_citizenship, string client_education_level, string client_high_school_grad_year, string client_degree_of_interest, string client_age, string client_degree_start_timeframe, string client_high_school_enrolled, string client_previously_enrolled, string client_military, string client_gender, string client_affiliation, string client_best_time_to_contact, string client_submitted, string client_ip, string client_mfp_id, string client_attended_class, string client_contacted_school, string client_rn, string client_nursing, string client_teaching_cred, string client_sub_id, ObjectParameter clientID, string client_has_internet)
        {
            var client_nameParameter = client_name != null ?
                new ObjectParameter("client_name", client_name) :
                new ObjectParameter("client_name", typeof(string));
    
            var client_addressParameter = client_address != null ?
                new ObjectParameter("client_address", client_address) :
                new ObjectParameter("client_address", typeof(string));
    
            var client_cityParameter = client_city != null ?
                new ObjectParameter("client_city", client_city) :
                new ObjectParameter("client_city", typeof(string));
    
            var client_stateParameter = client_state != null ?
                new ObjectParameter("client_state", client_state) :
                new ObjectParameter("client_state", typeof(string));
    
            var client_zipParameter = client_zip != null ?
                new ObjectParameter("client_zip", client_zip) :
                new ObjectParameter("client_zip", typeof(string));
    
            var client_phoneParameter = client_phone != null ?
                new ObjectParameter("client_phone", client_phone) :
                new ObjectParameter("client_phone", typeof(string));
    
            var client_work_phoneParameter = client_work_phone != null ?
                new ObjectParameter("client_work_phone", client_work_phone) :
                new ObjectParameter("client_work_phone", typeof(string));
    
            var client_emailParameter = client_email != null ?
                new ObjectParameter("client_email", client_email) :
                new ObjectParameter("client_email", typeof(string));
    
            var client_added_byParameter = client_added_by != null ?
                new ObjectParameter("client_added_by", client_added_by) :
                new ObjectParameter("client_added_by", typeof(string));
    
            var client_AOIParameter = client_AOI != null ?
                new ObjectParameter("client_AOI", client_AOI) :
                new ObjectParameter("client_AOI", typeof(string));
    
            var client_POIParameter = client_POI != null ?
                new ObjectParameter("client_POI", client_POI) :
                new ObjectParameter("client_POI", typeof(string));
    
            var client_citizenshipParameter = client_citizenship != null ?
                new ObjectParameter("client_citizenship", client_citizenship) :
                new ObjectParameter("client_citizenship", typeof(string));
    
            var client_education_levelParameter = client_education_level != null ?
                new ObjectParameter("client_education_level", client_education_level) :
                new ObjectParameter("client_education_level", typeof(string));
    
            var client_high_school_grad_yearParameter = client_high_school_grad_year != null ?
                new ObjectParameter("client_high_school_grad_year", client_high_school_grad_year) :
                new ObjectParameter("client_high_school_grad_year", typeof(string));
    
            var client_degree_of_interestParameter = client_degree_of_interest != null ?
                new ObjectParameter("client_degree_of_interest", client_degree_of_interest) :
                new ObjectParameter("client_degree_of_interest", typeof(string));
    
            var client_ageParameter = client_age != null ?
                new ObjectParameter("client_age", client_age) :
                new ObjectParameter("client_age", typeof(string));
    
            var client_degree_start_timeframeParameter = client_degree_start_timeframe != null ?
                new ObjectParameter("client_degree_start_timeframe", client_degree_start_timeframe) :
                new ObjectParameter("client_degree_start_timeframe", typeof(string));
    
            var client_high_school_enrolledParameter = client_high_school_enrolled != null ?
                new ObjectParameter("client_high_school_enrolled", client_high_school_enrolled) :
                new ObjectParameter("client_high_school_enrolled", typeof(string));
    
            var client_previously_enrolledParameter = client_previously_enrolled != null ?
                new ObjectParameter("client_previously_enrolled", client_previously_enrolled) :
                new ObjectParameter("client_previously_enrolled", typeof(string));
    
            var client_militaryParameter = client_military != null ?
                new ObjectParameter("client_military", client_military) :
                new ObjectParameter("client_military", typeof(string));
    
            var client_genderParameter = client_gender != null ?
                new ObjectParameter("client_gender", client_gender) :
                new ObjectParameter("client_gender", typeof(string));
    
            var client_affiliationParameter = client_affiliation != null ?
                new ObjectParameter("client_affiliation", client_affiliation) :
                new ObjectParameter("client_affiliation", typeof(string));
    
            var client_best_time_to_contactParameter = client_best_time_to_contact != null ?
                new ObjectParameter("client_best_time_to_contact", client_best_time_to_contact) :
                new ObjectParameter("client_best_time_to_contact", typeof(string));
    
            var client_submittedParameter = client_submitted != null ?
                new ObjectParameter("client_submitted", client_submitted) :
                new ObjectParameter("client_submitted", typeof(string));
    
            var client_ipParameter = client_ip != null ?
                new ObjectParameter("client_ip", client_ip) :
                new ObjectParameter("client_ip", typeof(string));
    
            var client_mfp_idParameter = client_mfp_id != null ?
                new ObjectParameter("client_mfp_id", client_mfp_id) :
                new ObjectParameter("client_mfp_id", typeof(string));
    
            var client_attended_classParameter = client_attended_class != null ?
                new ObjectParameter("client_attended_class", client_attended_class) :
                new ObjectParameter("client_attended_class", typeof(string));
    
            var client_contacted_schoolParameter = client_contacted_school != null ?
                new ObjectParameter("client_contacted_school", client_contacted_school) :
                new ObjectParameter("client_contacted_school", typeof(string));
    
            var client_rnParameter = client_rn != null ?
                new ObjectParameter("client_rn", client_rn) :
                new ObjectParameter("client_rn", typeof(string));
    
            var client_nursingParameter = client_nursing != null ?
                new ObjectParameter("client_nursing", client_nursing) :
                new ObjectParameter("client_nursing", typeof(string));
    
            var client_teaching_credParameter = client_teaching_cred != null ?
                new ObjectParameter("client_teaching_cred", client_teaching_cred) :
                new ObjectParameter("client_teaching_cred", typeof(string));
    
            var client_sub_idParameter = client_sub_id != null ?
                new ObjectParameter("client_sub_id", client_sub_id) :
                new ObjectParameter("client_sub_id", typeof(string));
    
            var client_has_internetParameter = client_has_internet != null ?
                new ObjectParameter("client_has_internet", client_has_internet) :
                new ObjectParameter("client_has_internet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertorUpdateT_Client", client_nameParameter, client_addressParameter, client_cityParameter, client_stateParameter, client_zipParameter, client_phoneParameter, client_work_phoneParameter, client_emailParameter, client_added_byParameter, client_AOIParameter, client_POIParameter, client_citizenshipParameter, client_education_levelParameter, client_high_school_grad_yearParameter, client_degree_of_interestParameter, client_ageParameter, client_degree_start_timeframeParameter, client_high_school_enrolledParameter, client_previously_enrolledParameter, client_militaryParameter, client_genderParameter, client_affiliationParameter, client_best_time_to_contactParameter, client_submittedParameter, client_ipParameter, client_mfp_idParameter, client_attended_classParameter, client_contacted_schoolParameter, client_rnParameter, client_nursingParameter, client_teaching_credParameter, client_sub_idParameter, clientID, client_has_internetParameter);
        }
    
        public virtual int InsertSchoolDetail(string primaryPhone, Nullable<int> companyNameId, string schoolName, Nullable<int> schoolStatusId)
        {
            var primaryPhoneParameter = primaryPhone != null ?
                new ObjectParameter("PrimaryPhone", primaryPhone) :
                new ObjectParameter("PrimaryPhone", typeof(string));
    
            var companyNameIdParameter = companyNameId.HasValue ?
                new ObjectParameter("CompanyNameId", companyNameId) :
                new ObjectParameter("CompanyNameId", typeof(int));
    
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            var schoolStatusIdParameter = schoolStatusId.HasValue ?
                new ObjectParameter("SchoolStatusId", schoolStatusId) :
                new ObjectParameter("SchoolStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSchoolDetail", primaryPhoneParameter, companyNameIdParameter, schoolNameParameter, schoolStatusIdParameter);
        }
    
        public virtual int LoginUser(string user_name, string password, ObjectParameter userType)
        {
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoginUser", user_nameParameter, passwordParameter, userType);
        }
    
        public virtual int PushEsto(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PushEsto", idParameter);
        }
    
        public virtual int SbitUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SbitUpdate");
        }
    
        public virtual ObjectResult<SchoolDetailByDay_Result> SchoolDetailByDay(string status, string schoolName, string siteName, string agent, Nullable<System.DateTime> day)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("Agent", agent) :
                new ObjectParameter("Agent", typeof(string));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SchoolDetailByDay_Result>("SchoolDetailByDay", statusParameter, schoolNameParameter, siteNameParameter, agentParameter, dayParameter);
        }
    
        public virtual ObjectResult<SchoolDetailByDayWithCounts_Result> SchoolDetailByDayWithCounts(string agent, Nullable<System.DateTime> day, string agentGroup, Nullable<bool> onlySubmitted)
        {
            var agentParameter = agent != null ?
                new ObjectParameter("Agent", agent) :
                new ObjectParameter("Agent", typeof(string));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            var agentGroupParameter = agentGroup != null ?
                new ObjectParameter("AgentGroup", agentGroup) :
                new ObjectParameter("AgentGroup", typeof(string));
    
            var onlySubmittedParameter = onlySubmitted.HasValue ?
                new ObjectParameter("OnlySubmitted", onlySubmitted) :
                new ObjectParameter("OnlySubmitted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SchoolDetailByDayWithCounts_Result>("SchoolDetailByDayWithCounts", agentParameter, dayParameter, agentGroupParameter, onlySubmittedParameter);
        }
    
        public virtual ObjectResult<SchoolDetailByPhoneNumber_Result> SchoolDetailByPhoneNumber(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SchoolDetailByPhoneNumber_Result>("SchoolDetailByPhoneNumber", phoneParameter);
        }
    
        public virtual ObjectResult<SchoolDetailByTimeZoneWithCounts_Result> SchoolDetailByTimeZoneWithCounts(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string areaofInterest)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var areaofInterestParameter = areaofInterest != null ?
                new ObjectParameter("AreaofInterest", areaofInterest) :
                new ObjectParameter("AreaofInterest", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SchoolDetailByTimeZoneWithCounts_Result>("SchoolDetailByTimeZoneWithCounts", startDateParameter, endDateParameter, areaofInterestParameter);
        }
    
        public virtual ObjectResult<SchoolDetailByTimeZoneWithCounts_Test_Result> SchoolDetailByTimeZoneWithCounts_Test(Nullable<System.DateTime> startDate, Nullable<System.DateTime> enddate, string areaofInterest, string agentGroup, Nullable<int> iD)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var areaofInterestParameter = areaofInterest != null ?
                new ObjectParameter("AreaofInterest", areaofInterest) :
                new ObjectParameter("AreaofInterest", typeof(string));
    
            var agentGroupParameter = agentGroup != null ?
                new ObjectParameter("AgentGroup", agentGroup) :
                new ObjectParameter("AgentGroup", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SchoolDetailByTimeZoneWithCounts_Test_Result>("SchoolDetailByTimeZoneWithCounts_Test", startDateParameter, enddateParameter, areaofInterestParameter, agentGroupParameter, iDParameter);
        }
    
        public virtual ObjectResult<SchoolDetailByTimeZoneWithCounts_Test1_Result> SchoolDetailByTimeZoneWithCounts_Test1(Nullable<System.DateTime> startDate, Nullable<System.DateTime> enddate, string areaofInterest, string agentGroup)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var areaofInterestParameter = areaofInterest != null ?
                new ObjectParameter("AreaofInterest", areaofInterest) :
                new ObjectParameter("AreaofInterest", typeof(string));
    
            var agentGroupParameter = agentGroup != null ?
                new ObjectParameter("AgentGroup", agentGroup) :
                new ObjectParameter("AgentGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SchoolDetailByTimeZoneWithCounts_Test1_Result>("SchoolDetailByTimeZoneWithCounts_Test1", startDateParameter, enddateParameter, areaofInterestParameter, agentGroupParameter);
        }
    
        public virtual ObjectResult<SchoolDetailByTimeZoneWithCounts_Test2_Result> SchoolDetailByTimeZoneWithCounts_Test2(Nullable<System.DateTime> startDate, Nullable<System.DateTime> enddate, string areaofInterest, string agentGroup)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var areaofInterestParameter = areaofInterest != null ?
                new ObjectParameter("AreaofInterest", areaofInterest) :
                new ObjectParameter("AreaofInterest", typeof(string));
    
            var agentGroupParameter = agentGroup != null ?
                new ObjectParameter("AgentGroup", agentGroup) :
                new ObjectParameter("AgentGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SchoolDetailByTimeZoneWithCounts_Test2_Result>("SchoolDetailByTimeZoneWithCounts_Test2", startDateParameter, enddateParameter, areaofInterestParameter, agentGroupParameter);
        }
    
        public virtual ObjectResult<SelectEventLog_Result> SelectEventLog(string userName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectEventLog_Result>("SelectEventLog", userNameParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int spImportHistory(string storedProcedure, string fileName, string status, Nullable<int> rowCount)
        {
            var storedProcedureParameter = storedProcedure != null ?
                new ObjectParameter("StoredProcedure", storedProcedure) :
                new ObjectParameter("StoredProcedure", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var rowCountParameter = rowCount.HasValue ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spImportHistory", storedProcedureParameter, fileNameParameter, statusParameter, rowCountParameter);
        }
    
        public virtual ObjectResult<SubmittedLeadDetail_Result> SubmittedLeadDetail(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubmittedLeadDetail_Result>("SubmittedLeadDetail", phoneParameter);
        }
    
        public virtual ObjectResult<UniqueLeadAndSchoolByDate_Result> UniqueLeadAndSchoolByDate(string schoolName, string agent, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("Agent", agent) :
                new ObjectParameter("Agent", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UniqueLeadAndSchoolByDate_Result>("UniqueLeadAndSchoolByDate", schoolNameParameter, agentParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int Update_bit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_bit");
        }
    
        public virtual int Update_CallLogbit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_CallLogbit");
        }
    
        public virtual int Update_Partnerbit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Partnerbit");
        }
    
        public virtual int Update_sbit(string parner_phone_number)
        {
            var parner_phone_numberParameter = parner_phone_number != null ?
                new ObjectParameter("parner_phone_number", parner_phone_number) :
                new ObjectParameter("parner_phone_number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_sbit", parner_phone_numberParameter);
        }
    
        public virtual int update_submit_record(Nullable<int> client_id, string areaofinterest, string programsofinterest, string citizenship, string educationLevel, string highSchoolGradYear, string degreeOfInterest, string age, string degreeStartTimeframe, string highSchoolEnrolled, string previouslyEnrolled, string zip, Nullable<System.DateTime> date_submitted, string who_submitted, string schoolSubmitted, string selectedSchool, string schoolType, string workExperience, string currentlyEmployed, string military, string submittedData, string result, Nullable<int> mfp_id, string group, string secondaryPhone, string gender, string affiliation, string bestTimeToContact, string primaryPhone, string firstName, string lastName, string address1, string address2, string city, string state, string email, string subID, string rN, string nursingDiploma, string teachingCredential)
        {
            var client_idParameter = client_id.HasValue ?
                new ObjectParameter("client_id", client_id) :
                new ObjectParameter("client_id", typeof(int));
    
            var areaofinterestParameter = areaofinterest != null ?
                new ObjectParameter("areaofinterest", areaofinterest) :
                new ObjectParameter("areaofinterest", typeof(string));
    
            var programsofinterestParameter = programsofinterest != null ?
                new ObjectParameter("programsofinterest", programsofinterest) :
                new ObjectParameter("programsofinterest", typeof(string));
    
            var citizenshipParameter = citizenship != null ?
                new ObjectParameter("Citizenship", citizenship) :
                new ObjectParameter("Citizenship", typeof(string));
    
            var educationLevelParameter = educationLevel != null ?
                new ObjectParameter("EducationLevel", educationLevel) :
                new ObjectParameter("EducationLevel", typeof(string));
    
            var highSchoolGradYearParameter = highSchoolGradYear != null ?
                new ObjectParameter("HighSchoolGradYear", highSchoolGradYear) :
                new ObjectParameter("HighSchoolGradYear", typeof(string));
    
            var degreeOfInterestParameter = degreeOfInterest != null ?
                new ObjectParameter("DegreeOfInterest", degreeOfInterest) :
                new ObjectParameter("DegreeOfInterest", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var degreeStartTimeframeParameter = degreeStartTimeframe != null ?
                new ObjectParameter("DegreeStartTimeframe", degreeStartTimeframe) :
                new ObjectParameter("DegreeStartTimeframe", typeof(string));
    
            var highSchoolEnrolledParameter = highSchoolEnrolled != null ?
                new ObjectParameter("HighSchoolEnrolled", highSchoolEnrolled) :
                new ObjectParameter("HighSchoolEnrolled", typeof(string));
    
            var previouslyEnrolledParameter = previouslyEnrolled != null ?
                new ObjectParameter("PreviouslyEnrolled", previouslyEnrolled) :
                new ObjectParameter("PreviouslyEnrolled", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var date_submittedParameter = date_submitted.HasValue ?
                new ObjectParameter("date_submitted", date_submitted) :
                new ObjectParameter("date_submitted", typeof(System.DateTime));
    
            var who_submittedParameter = who_submitted != null ?
                new ObjectParameter("who_submitted", who_submitted) :
                new ObjectParameter("who_submitted", typeof(string));
    
            var schoolSubmittedParameter = schoolSubmitted != null ?
                new ObjectParameter("SchoolSubmitted", schoolSubmitted) :
                new ObjectParameter("SchoolSubmitted", typeof(string));
    
            var selectedSchoolParameter = selectedSchool != null ?
                new ObjectParameter("SelectedSchool", selectedSchool) :
                new ObjectParameter("SelectedSchool", typeof(string));
    
            var schoolTypeParameter = schoolType != null ?
                new ObjectParameter("SchoolType", schoolType) :
                new ObjectParameter("SchoolType", typeof(string));
    
            var workExperienceParameter = workExperience != null ?
                new ObjectParameter("WorkExperience", workExperience) :
                new ObjectParameter("WorkExperience", typeof(string));
    
            var currentlyEmployedParameter = currentlyEmployed != null ?
                new ObjectParameter("CurrentlyEmployed", currentlyEmployed) :
                new ObjectParameter("CurrentlyEmployed", typeof(string));
    
            var militaryParameter = military != null ?
                new ObjectParameter("Military", military) :
                new ObjectParameter("Military", typeof(string));
    
            var submittedDataParameter = submittedData != null ?
                new ObjectParameter("SubmittedData", submittedData) :
                new ObjectParameter("SubmittedData", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var mfp_idParameter = mfp_id.HasValue ?
                new ObjectParameter("mfp_id", mfp_id) :
                new ObjectParameter("mfp_id", typeof(int));
    
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var secondaryPhoneParameter = secondaryPhone != null ?
                new ObjectParameter("SecondaryPhone", secondaryPhone) :
                new ObjectParameter("SecondaryPhone", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var affiliationParameter = affiliation != null ?
                new ObjectParameter("Affiliation", affiliation) :
                new ObjectParameter("Affiliation", typeof(string));
    
            var bestTimeToContactParameter = bestTimeToContact != null ?
                new ObjectParameter("BestTimeToContact", bestTimeToContact) :
                new ObjectParameter("BestTimeToContact", typeof(string));
    
            var primaryPhoneParameter = primaryPhone != null ?
                new ObjectParameter("PrimaryPhone", primaryPhone) :
                new ObjectParameter("PrimaryPhone", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(string));
    
            var rNParameter = rN != null ?
                new ObjectParameter("RN", rN) :
                new ObjectParameter("RN", typeof(string));
    
            var nursingDiplomaParameter = nursingDiploma != null ?
                new ObjectParameter("NursingDiploma", nursingDiploma) :
                new ObjectParameter("NursingDiploma", typeof(string));
    
            var teachingCredentialParameter = teachingCredential != null ?
                new ObjectParameter("TeachingCredential", teachingCredential) :
                new ObjectParameter("TeachingCredential", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_submit_record", client_idParameter, areaofinterestParameter, programsofinterestParameter, citizenshipParameter, educationLevelParameter, highSchoolGradYearParameter, degreeOfInterestParameter, ageParameter, degreeStartTimeframeParameter, highSchoolEnrolledParameter, previouslyEnrolledParameter, zipParameter, date_submittedParameter, who_submittedParameter, schoolSubmittedParameter, selectedSchoolParameter, schoolTypeParameter, workExperienceParameter, currentlyEmployedParameter, militaryParameter, submittedDataParameter, resultParameter, mfp_idParameter, groupParameter, secondaryPhoneParameter, genderParameter, affiliationParameter, bestTimeToContactParameter, primaryPhoneParameter, firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, emailParameter, subIDParameter, rNParameter, nursingDiplomaParameter, teachingCredentialParameter);
        }
    
        public virtual int updatecalibrations(string we_date)
        {
            var we_dateParameter = we_date != null ?
                new ObjectParameter("we_date", we_date) :
                new ObjectParameter("we_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatecalibrations", we_dateParameter);
        }
    
        public virtual int eSubmitterReconciliation(Nullable<System.DateTime> date, string campaigns)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var campaignsParameter = campaigns != null ?
                new ObjectParameter("Campaigns", campaigns) :
                new ObjectParameter("Campaigns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eSubmitterReconciliation", dateParameter, campaignsParameter);
        }
    
        public virtual ObjectResult<eSubmitterSummary_Result> eSubmitterSummary(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<eSubmitterSummary_Result>("eSubmitterSummary", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<eSubmitterSummaryNoMatch_Result> eSubmitterSummaryNoMatch(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<eSubmitterSummaryNoMatch_Result>("eSubmitterSummaryNoMatch", startDateParameter, endDateParameter);
        }
    
        public virtual int eSubmitterSummaryPivot(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string campaigns)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var campaignsParameter = campaigns != null ?
                new ObjectParameter("Campaigns", campaigns) :
                new ObjectParameter("Campaigns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eSubmitterSummaryPivot", startDateParameter, endDateParameter, campaignsParameter);
        }
    
        public virtual int ImportDates(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportDates", dateParameter);
        }
    }
}
